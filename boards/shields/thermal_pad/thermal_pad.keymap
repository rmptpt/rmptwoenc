#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define FUNC    1
#define AGG     2


&lt { quick-tap-ms = <150>; };

// keep it high until you're familiar with keyboard to avoid misclicks
// later lower it to <= 200

&mt {
  flavor = "tap-preferred";
    tapping-term-ms = <300>;
};

&sl {
    release-after-ms = <2000>;
};

#define NAV_LEFT  &mt LC(LEFT)   LEFT    // tap: left  | long-tap: beginning of line
#define NAV_RIGHT &mt LC(RIGHT)  RIGHT   // tap: right | long-tap: end       of line
#define NAV_UP    &mt LC(HOME) UP      // tap: up    | long-tap: beginning of document
#define NAV_DOWN  &mt LC(END)  DOWN    // tap: down  | long-tap: end       of document
#define NAV_BSPC  &mt LC(BSPC) BSPC    // tap: bspc  | long-tap: delete word backward
#define NAV_DEL   &mt LC(DEL)  DEL     // tap: del   | long-tap: delete word forward


/ {
    combos {
        compatible = "zmk,combos";
        combo_bootloader {
            timeout-ms = <50>;
            key-positions = <4 5 6>;
            bindings = <&bootloader>;
        };
        combo_layer {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&tog FUNC>;
        };

    combo_layer {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&tog AGG>;
        };

    };
};

/ {
    macros {
        name_this: name_this {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp T &kp H &kp E &kp R &kp M &kp A &kp L>
                , <&macro_release &kp LSHFT>
                ;
        };

tabagg1: tabagg1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LALT>
                , <&macro_tap &kp N1>
                , <&macro_release &kp LALT>
                ;
        };
ctrlw: ctrlw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp W>
                , <&macro_release &kp LCTRL>
                ;
        };

ctrlup: ctrlup {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LCTRL>
                , <&macro_tap &kp UP>
                , <&macro_release &kp LCTRL>
                ;
        };
shifq: shifq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_tap &kp QMARK>
                , <&macro_release &kp LSHFT>
                ;
        };


    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_MUTE
                &kp PSCRN   &kp HOME          &name_this
                &kp LEFT    &kp END           &kp RIGHT   &kp C_SLEEP
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;

        };

        fn_layer {
            bindings = <
                &bt BT_CLR   &bt BT_NXT   &bt BT_PRV  &trans
                &bt BT_SEL 0 &out OUT_BLE &out OUT_USB
                &trans       &trans       &trans      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;

        };

    aggnews_layer {
            bindings = <
                &trans      &trans      &trans      &trans
                &tabagg1    &ctrlw      NAV_UP
                &shifq      &kp LCTRL   NAV_DOWN    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP &inc_dec_kp PG_UP PG_DN>;

        };


    };
};
